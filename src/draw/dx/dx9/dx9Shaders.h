#pragma once

namespace hax {

	namespace draw {

		namespace dx9 {

			/*
			float4x4 projectionMatrix : register(c0);

			struct VSI {
				float2 pos : POSITION;
				float4 col : COLOR0;
				float2 uv : TEXCOORD0;
			};

			struct PSI {
				float4 pos : POSITION;
				float4 col : COLOR0;
				float2 uv : TEXCOORD0;
			};

			PSI main(VSI input) {
				PSI output;
				output.pos = mul(projectionMatrix, float4(input.pos, 0.f, 1.f));
				output.col = input.col;
				output.uv = input.uv;

				return output;
			}
			*/
			constexpr unsigned char VERTEX_SHADER[]{
				0x00, 0x03, 0xFE, 0xFF, 0xFE, 0xFF, 0x22, 0x00, 0x43, 0x54, 0x41, 0x42, 0x1C, 0x00, 0x00, 0x00,
				0x5B, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFE, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00,
				0x00, 0x01, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
				0x04, 0x00, 0x02, 0x00, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x72, 0x6F, 0x6A,
				0x65, 0x63, 0x74, 0x69, 0x6F, 0x6E, 0x4D, 0x61, 0x74, 0x72, 0x69, 0x78, 0x00, 0xAB, 0xAB, 0xAB,
				0x03, 0x00, 0x03, 0x00, 0x04, 0x00, 0x04, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x76, 0x73, 0x5F, 0x33, 0x5F, 0x30, 0x00, 0x4D, 0x69, 0x63, 0x72, 0x6F, 0x73, 0x6F, 0x66, 0x74,
				0x20, 0x28, 0x52, 0x29, 0x20, 0x48, 0x4C, 0x53, 0x4C, 0x20, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72,
				0x20, 0x43, 0x6F, 0x6D, 0x70, 0x69, 0x6C, 0x65, 0x72, 0x20, 0x31, 0x30, 0x2E, 0x31, 0x00, 0xAB,
				0x1F, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x0F, 0x90, 0x1F, 0x00, 0x00, 0x02,
				0x0A, 0x00, 0x00, 0x80, 0x01, 0x00, 0x0F, 0x90, 0x1F, 0x00, 0x00, 0x02, 0x05, 0x00, 0x00, 0x80,
				0x02, 0x00, 0x0F, 0x90, 0x1F, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x0F, 0xE0,
				0x1F, 0x00, 0x00, 0x02, 0x0A, 0x00, 0x00, 0x80, 0x01, 0x00, 0x0F, 0xE0, 0x1F, 0x00, 0x00, 0x02,
				0x05, 0x00, 0x00, 0x80, 0x02, 0x00, 0x03, 0xE0, 0x05, 0x00, 0x00, 0x03, 0x00, 0x00, 0x0F, 0x80,
				0x01, 0x00, 0xE4, 0xA0, 0x00, 0x00, 0x55, 0x90, 0x04, 0x00, 0x00, 0x04, 0x00, 0x00, 0x0F, 0x80,
				0x00, 0x00, 0xE4, 0xA0, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00, 0xE4, 0x80, 0x02, 0x00, 0x00, 0x03,
				0x00, 0x00, 0x0F, 0xE0, 0x00, 0x00, 0xE4, 0x80, 0x03, 0x00, 0xE4, 0xA0, 0x01, 0x00, 0x00, 0x02,
				0x01, 0x00, 0x0F, 0xE0, 0x01, 0x00, 0xE4, 0x90, 0x01, 0x00, 0x00, 0x02, 0x02, 0x00, 0x03, 0xE0,
				0x02, 0x00, 0xE4, 0x90, 0xFF, 0xFF, 0x00, 0x00
			};

			/*
			sampler2D texSampler : register(s0);

			struct PSI {
				float4 pos : SV_POSITION;
				float4 col : COLOR0;
				float2 uv : TEXCOORD0;
			};

			float4 main(PSI input) : COLOR {
				float4 texColor = tex2D(texSampler, input.uv);

				return texColor * input.col;
			}
			*/
			constexpr unsigned char PIXEL_SHADER[]{
				0x00, 0x03, 0xFF, 0xFF, 0xFE, 0xFF, 0x20, 0x00, 0x43, 0x54, 0x41, 0x42, 0x1C, 0x00, 0x00, 0x00,
				0x53, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00,
				0x00, 0x01, 0x00, 0x00, 0x4C, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
				0x01, 0x00, 0x02, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x65, 0x78, 0x53,
				0x61, 0x6D, 0x70, 0x6C, 0x65, 0x72, 0x00, 0xAB, 0x04, 0x00, 0x0C, 0x00, 0x01, 0x00, 0x01, 0x00,
				0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x73, 0x5F, 0x33, 0x5F, 0x30, 0x00, 0x4D,
				0x69, 0x63, 0x72, 0x6F, 0x73, 0x6F, 0x66, 0x74, 0x20, 0x28, 0x52, 0x29, 0x20, 0x48, 0x4C, 0x53,
				0x4C, 0x20, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x20, 0x43, 0x6F, 0x6D, 0x70, 0x69, 0x6C, 0x65,
				0x72, 0x20, 0x31, 0x30, 0x2E, 0x31, 0x00, 0xAB, 0x1F, 0x00, 0x00, 0x02, 0x0A, 0x00, 0x00, 0x80,
				0x00, 0x00, 0x0F, 0x90, 0x1F, 0x00, 0x00, 0x02, 0x05, 0x00, 0x00, 0x80, 0x01, 0x00, 0x03, 0x90,
				0x1F, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x90, 0x00, 0x08, 0x0F, 0xA0, 0x42, 0x00, 0x00, 0x03,
				0x00, 0x00, 0x0F, 0x80, 0x01, 0x00, 0xE4, 0x90, 0x00, 0x08, 0xE4, 0xA0, 0x05, 0x00, 0x00, 0x03,
				0x00, 0x08, 0x0F, 0x80, 0x00, 0x00, 0xE4, 0x80, 0x00, 0x00, 0xE4, 0x90, 0xFF, 0xFF, 0x00, 0x00
			};

		}

	}

}